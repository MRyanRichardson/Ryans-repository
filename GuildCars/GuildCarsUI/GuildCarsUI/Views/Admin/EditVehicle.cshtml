@model GuildCarsModel.Model.VehicleAll

<div class="container" id="PageColor">
    @using (Html.BeginForm("EditVehicle", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "admin-form" }))
    {
        @Html.HiddenFor(i => i.VehicleId)
        <h2>Edit Vehicle</h2>
        <div class="row">
            <div class="col-md-4">
                <label for="addMake">Make</label>
                @Html.DropDownListFor(m => m.MakeId, new SelectList(Model.makes, "MakeID", "MakeType", 15), new { @class = "form-control", id = "make" })
                @Html.ValidationMessageFor(m => m.MakeId)
            </div>
            <div class="col-md-4">
                <label for="addModel">Model</label>
                @Html.DropDownListFor(m => m.ModelId, Model.slModels, new { @class = "form-control", id = "model" })
                @Html.ValidationMessageFor(m => m.ModelId)
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label for="addType">Type</label>
                <select class="form-control" id="addType">
                    <option value="@Model.New=1">New</option>
                    <option value="@Model.New=0">Used</option>
                </select>
            </div>
            <div class="col-md-4">
                <label for="addBodyStyle">BodyStyle</label>
                @Html.DropDownListFor(m => m.BodyStyleId, Model.slBodyStyles, new { @class = "form-control", id = "bodyStyle" })
                @Html.ValidationMessageFor(m => m.BodyStyleId)
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label for="addYear">Year</label>
                @Html.TextBoxFor(m => m.Year, new { @class = "form-control", @Value = Model.vehicleToEdit.Year })
            </div>
            <div class="col-md-4">
                <label for="addTransmission">Transmission</label>
                <select class="form-control">
                    <option value="@Model.AutomaticTrans=1">Automatic</option>
                    <option value="@Model.AutomaticTrans=0">Manual</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label for="addColor">Color</label>
                @Html.DropDownListFor(m => m.ColorId, Model.slColors, new { @class = "form-control", id = "color" })
                @Html.ValidationMessageFor(m => m.ColorId)
            </div>
            <div class="col-md-4">
                <label for="addInterior">Interior</label>
                @Html.DropDownListFor(m => m.InteriorId, Model.slInteriors, new { @class = "form-control", id = "interior" })
                @Html.ValidationMessageFor(m => m.InteriorId)
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label for="addMileage">Mileage</label>
                @Html.TextBoxFor(m => m.Mileage, new { @class = "form-control", @Value = Model.vehicleToEdit.Mileage })
            </div>
            <div class="col-md-4">
                <label for="addVIN">VIN #</label>
                @Html.TextBoxFor(m => m.VIN, new { @class = "form-control", @Value = Model.vehicleToEdit.Mileage })
            </div>
        </div>
        <div class="row ">
            <div class="col-md-4">
                <label for="addMSRP">MSRP</label>
                @Html.TextBoxFor(m => m.MSRP, new { @class = "form-control", @Value = Model.vehicleToEdit.MSRP })
            </div>
            <div class="col-md-4">
                <label for="addSalePrice">Sale Price</label>
                @Html.TextBoxFor(m => m.SalePrice, new { @class = "form-control", @Value = Model.vehicleToEdit.SalePrice })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label for="addDescription">Description</label>
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @rows = 10, @Value = Model.vehicleToEdit.Description })
            </div>
        </div>
        <br />
        <div class="row">

            <div class="col-md-4 ">
                <label for="addPicture">Picture</label><br />
                @Html.TextBoxFor(m => m.VehicleImage, new { type = "file", id = "imgInp", accept = "image/png,image/jpg,image/jpeg" })
                <img id="blah" src="/Images/inventory-@(Model.vehicleToEdit.VehicleID).png" style="width:150px;border-radius:10px;" alt="your image" />

            </div>
        </div>
        <br />
        <div class="row">

            <div class="col-md-4 ">
                <label>@Html.CheckBoxFor(m => m.Featured, new { @Value = Model.vehicleToEdit.Featured })&nbsp;Feature this vehicle</label>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-4 ">

                @Html.ActionLink("Delete", "DeleteVehicle", "Admin", new { id = Model.vehicleToEdit.VehicleID }, new { @class = " btn btn-danger" })
                <button type="submit" class="btn btn-default">Save</button>
            </div>
        </div>
    }
</div>


@section Scripts{
    <script>
        $(document).ready(function () {

             $('#make').val('@Model.MakeId');
             $('#model').val('@Model.vehicleToEdit.ModelID');
             $('#bodyStyle').val('@Model.vehicleToEdit.BodyStyleID');
             $('#color').val('@Model.vehicleToEdit.ColorID');
            $('#interior').val('@Model.vehicleToEdit.InteriorID');
            $("#Description").html('@Model.vehicleToEdit.Description');



            $(document).on('change', '.btn-file :file', function () {
                var input = $(this),
                    label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                input.trigger('fileselect', [label]);
            });

            $('.btn-file :file').on('fileselect', function (event, label) {

                var input = $(this).parents('.input-group').find(':text'),
                    log = label;

                if (input.length) {
                    input.val(log);
                } else {
                    if (log) alert(log);
                }

            });


            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#blah').attr('src', e.target.result)
                            .width(150)
                            ;
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            function GetModels() {
                modelSelect.prop('disabled', true);
                modelSelect.empty();

                $.ajax({
                    type: "GET",
                    url: "/api/models/makeId=" + parseInt(makeSelect.val()),
                    success: function (modelArray) {
                        $.each(modelArray, function () {
                            modelSelect.append($("<option />").val(this.ModelId).text(this.ModelName));
                        });

                        modelSelect.prop('disabled', false);
                    },
                    error: function () {
                        alert("There was an issue contacting our servers. Please try again later.");
                    }
                });
            }


            $("#imgInp").change(function () {
                readURL(this);
            });
        });
    </script>
}